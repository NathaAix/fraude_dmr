import easyocr
import numpy as np
from PIL import Image, ImageDraw
import os
import shutil
import re


def detect_text_blocks(img_path):
    detection_result = reader.detect(img_path,
                                 width_ths=0.7, 
                                 mag_ratio=1.5
                                 )
    text_coordinates = detection_result[0][0]
    return text_coordinates

def draw_bounds(img_path, bbox):
    image = Image.open(img_path)  
    draw = ImageDraw.Draw(image)
    for b in bbox:
        p0, p1, p2, p3 = [b[0], b[2]], [b[1], b[2]], \
                         [b[1], b[3]], [b[0], b[3]]
        draw.line([*p0, *p1, *p2, *p3, *p0], fill='red', width=2)
    return np.asarray(image)

# Draw bounding boxes
def draw_boxes(image, bounds, color='yellow', width=2):
    draw = ImageDraw.Draw(image)
    for b in bounds:
        p0, p1, p2, p3 = [b[0], b[2]], [b[1], b[2]], \
                         [b[1], b[3]], [b[0], b[3]]
        draw.line([*p0, *p1, *p2, *p3, *p0], fill='red', width=2)
    return image



file=[]
directory = r'/content/drive/MyDrive/PFE/DonneÃÅes/image_facture'
for filename in os.listdir(directory):
    if filename.endswith(".jpg"):
        file.append(os.path.join(directory, filename))
        print(os.path.join(directory, filename))

    else:
        continue

        
def dateferiee(element):
  match=re.findall(r'\d+[/.-]\d+[/.-]\d+', element)
  return match


file_destination="/content/drive/MyDrive/destination"

jour_ferie=["1/1/2022","01-01-2022","01/01/2022",
"18/4/2022","18-04-2022","18/04/2022",
"1/5/2022","01-05-2022","01/05/2022",
"8/5/2022","08-05-2022","08/05/2022",
"26/5/2022","26-05-2022","26/05/2022",
"6/6/2022","06-06-2022","06/06/2022",
"14/7/2022","14-07-2022","14/07/2022",
"15/8/2022","15-08-2022","15/08/2022",
"1/11/2022","01-11-2022","01/11/2022"
"11/11/2022","11-11-2022",
"25/12/2022","25-12-2022",
"1/1/2023","01-01-2023","01/01/2023",
"10/4/2023","10-04-2023","10/04/2023",
"1/5/2023","01-05-2023","01/05/2023",
"8/5/2023","08-05-2023","08/05/2023",
"18/5/2023","18-05-2023","18/05/2023",
"29/5/2023","29-05-2023","29/05/2023",
"14/7/2023","14-07-2023","14/07/2023",
"15/8/2023","15-08-2023","15/08/2023",
"1/11/2023","01-11-2023","01/11/2023",
"11/11/2023","11-11-2023",
"25/12/2023","25-12-2023",
"1/1/2024","01-01-2024","01/01/2024",
"1/4/2024","01-04-2024","01/04/2024",
"1/5/2024","01-05-2024","01/05/2024",
"8/5/2024","08-05-2024","08/05/2024",
"9/5/2024","09-05-2024","09/05/2024",
"20/5/2024","20-05-2024","20/05/2024",
"14/7/2024","14-07-2024","14/07/2024",
"15/8/2024","15-08-2024","15/08/2024",
"1/11/2024","01-11-2024","01/11/2024",
"11/11/2024","11-11-2024",
"25/12/2024","25-12-2024",
"01/01/2025","01-01-2025","1/1/2025",
"21/4/2025","21-04-2025","21/04/2025",
"01/05/2025","01-05-2025","1/5/2025",
"8/5/2025","08-05-2025","08/05/2025",
"29/5/2025","29-05-2025","29/05/2025",
"9/6/2025","09-06-2025","09/06/2025",
"14/7/2025","14-07-2025","14/07/2025",
"15/8/2025","15-08-2025","15/08/2025",
"1/11/2025","01-11-2025","01/11/2025",
"11/11/2025","11-11-2025",
"25/12/2025","25-12-2025",
"1/1/2026","01-01-2026","01/01/2026",
"6/4/2026","06-04-2026","06/04/2026",
"1/5/2026","01-05-2026","01/05/2026",
"8/5/2026","08-05-2026","08/05/2026",
"14/5/2026","14-05-2026","14/05/2026"
"25/5/2026","25-05-2026","25/05/2026",
"14/7/2026","14-07-2026","14/07/2026",
"15/8/2026","15-08-2026","15/08/2026",
"1/11/2026","01-11-2026","01/11/2026",
"11/11/2026","11-11-2026",
"25/12/2026","25-12-2026",
"1/1/2027","01-01-2027","01/01/2027",
"29/3/2027","29-03-2027","29/03/2027",
"1/5/2027","01-05-2027","01/05/2027",
"6/5/2027","06-05-2027","06/05/2027",
"8/5/2027","08-05-2027","08/05/2027",
"17/5/2027","17-05-2027","17/05/2027",
"14/7/2027","14-07-2027","14/07/2027",
"15/8/2027","15-08-2027","15/08/2027",
"1/11/2027","01-11-2027","01/11/2027",
"11/11/2027","11-11-2027",
"25/12/2027","25-12-2027"]


for i in file:
    
    text_coordinates = detect_text_blocks(i)
    recognition_results = reader.recognize(i,
                                 horizontal_list=text_coordinates,
                                 free_list=[]
                                 )
    tr=[]
        for txt in recognition_results:
            tr.append((txt[1]))
        liste= "".join(tr)
        if dateferiee(liste)[0] in jour_ferie:
            shutil.move(str(i), file_destination)
        else:
            print("continue")


